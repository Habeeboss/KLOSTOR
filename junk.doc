create a cart page that shows the products that have been added to cart for purchase, this should be put in a table with all details present,
it should show the total details of the product and it should sum up all the cost to give the total payable amount

view cart shouldshow customers the list of products in their cart, remove item button should be present in the table 
so as to remove a particular item from the cart, this should have a corresponding effect on the total price. It should also have a 
fuction that will enable the reduction or increment in the quantity of a particuklar product, this should be beside the quantity 
for that particular item, increasing or decreasing that should have a corresponding effect on the total price


add to cart should possess the operation of order now button which is in the modal of the preview page, i.e they should be merged in 
such a way that there will be no differenceand conflict. Add to cart in the product display section should be replicated where the
order now button which is in the modal of the preview page is placed, the button should also be changed to add to cart. Upon 
clicking add to cart the modal should be displayed, the modal should maintain the details of the product which were previously required,
order now shoud now have a new fuction to carry out the function of adding the product as well as its price, quantity and other 
necessary details into the table of the cart page, upon clicking the order now button, it should add the details to the cart page and
redirect to the product page. The cart page should always have the pay now button which means the customer is done with the shopping
and they want to pay, the payment code in userroutes should be used for this. There is order now code in the useRoutes too
which should be addressed with respect to what has been discussed above.

The sign up and login for the customer and admin should be handled. If admin is not logged in, the delete and edit buttons in the 
product.ejs and Admin.ejs should not respond but if the admin is logged in, then those functions should respond. For the 
customerProduct.ejs,if the user is not logged in, the add to cart button, order now button and pay now button should not respond, but
if the user is logged in, the add to cart button, order now button and pay now button should respond. The sign up button should be
removed from the navbar upon signing in for the admin and customer aspects.

automatically use the mail of the registered(strictly) user i.e, the mail should be put into the mail field in the modal but 
an option to edit the mail for each item that is to be added to the cart should be included

Upload of multiple media for a product, including short videos, but picture should show by default and interchange between the 
available pictures, on hover of the product, short video should play if there's a video for the product but when the preview 
for the product is clicked, the preview page should include a carousel that changes the media i.e photos and videos, the photos should
be able to be changed by clicking on a previous and next icon and it should change after every three seconds, but whenever it 
is changed to a video, the vidoe should play for its full length before going to the next media content i.e photo or another video. 
The video should have its sound disabled automatically. 

I want to include categories in this app, The admin be able to create a new category from the admin page through a create a new 
category button. the javascript function for this should also be incorporated button, this category could be for clothes, footwear,
glasses/shades, accessories such as jewelleries etc. the category should be determined by the admin, this should also incorporated 
in the Admin.ejs and adminEdit.ejs such hat there should be a field for categories, the field should be empty by default
but upon hover of the field, the field should suggest all the already available categories which will save the admin the stress 
of typing the category, the field should permit typing of an already existing category in it, if a non existing category is put in there
it should not allow for uploading the field, rather is shoud log the error on the screen for the admin to know what the issue is.
the product page for the customer and the admin i.e the customerProduct.ejs and admin.ejs page should have classify products under
thier respective categories. It is not necessary for the category of a product to be card that shows the product details since it is just
for easy identification of products. The program of the adminEdit.ejs should be maintained, the fields should be prefilled based on the
details from the product that is to be edited. the category of the product should also be editable from the adminEdit.ejs such that 
admin can move a product to another category.

any error from the uploading of the details in the fields, should be handled by not allow for uploading the field, rather is 
shoud log the error on the screen for the admin to know what the issue is.

also for the search bar, upon inputting a text into the search field, all the product that has that text in thier details should be 
brought out, the text could be the category, the product name etc. thisshould be brought up in a display similar to the 
customerProduct.ejs page but it should not be a page since it will be rendered asynchronously. Use the ajax operation here.


for all the instructions above, create any new and necessary file, put the full code for all updated files. if there is need to install 
any modules, put the modules to be installed in the response. Most importantly, carry out these instructions in a sequence that would 
avoid having to go to readjust a file that has just been edited. Carry out these instructions in a manner that is best suitable 
considering scalability.